<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
        
  	<!-- <http pattern="/resources/**" security="none"></http> -->
    <!-- 검사 URL -->
    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/matching/**" access="hasAnyRole('USER', 'ADMIN')" />
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/**" access="permitAll" />
        <form-login 
        		login-page="/member/login"
        		login-processing-url="/member/loginProcess"
        		username-parameter="userId"
				password-parameter="password"
        		authentication-success-handler-ref="loginSuccessHandler"
        		authentication-failure-handler-ref="loginFailureHandler"
				/>
        <logout logout-url="/member/logout" logout-success-url="/"/>
        <access-denied-handler	error-page="/member/login/accessDenied" />
        <csrf disabled="true"/>
    </http>

	<!-- form-login의 authentication handler ref에 대한 bean 생성 -->
	<beans:bean id="loginSuccessHandler" class="kr.godz.auth.core.GodzLoginSuccessHandler"></beans:bean>
	<beans:bean id="loginFailureHandler" class="kr.godz.auth.core.GodzLoginFailureHandler"></beans:bean>
    
    <!-- BCrypt 암호화 bean  -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />  
    
	<beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
 
    
    <!--  provider  -->
    <authentication-manager>
        <authentication-provider>
        	<password-encoder hash="bcrypt" />
            <jdbc-user-service 
            	data-source-ref="dataSource"
				users-by-username-query= "select userId, password, usetype from lol_member where userId=?"
				authorities-by-username-query= "select userId, role from lol_member_role where userId=?" />
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>